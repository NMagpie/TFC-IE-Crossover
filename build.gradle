plugins {
    id("java")
    id("idea")
    id("maven-publish")
    id("com.matthewprenger.cursegradle") version "1.4.0"
    id("net.minecraftforge.gradle") version "5.1.+"
    id("org.parchmentmc.librarian.forgegradle") version "1.+"
    id("org.spongepowered.mixin") version "0.7.+"
}

version = "0.2.4"
group = 'com.nmagpie.tfc_ie_addon'
archivesBaseName = 'tfc_ie_addon'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"

minecraft {
    mappings channel: 'parchment', version: '2022.11.06-1.18.2'

    runs {

        all {
            args("-mixin.config=tfc_ie_addon.mixins.json")

            property("mixin.env.remapRefMap", "true")
            property("mixin.env.refMapRemappingFile", "${projectDir}/build/createSrgToMcp/output.srg")
            property("forge.logging.markers", "REGISTRIES")
            property("forge.logging.console.level", "debug")

            jvmArgs("-ea", "-Xmx4G", "-Xms4G")

            mods {
                tfc_ie_addon {
                    source sourceSets.main
                }
            }
        }

        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'tfc_ie_addon'

            mods {
                tfc_ie_addon {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'tfc_ie_addon'

            mods {
                tfc_ie_addon {
                    source sourceSets.main
                }
            }
        }

        gameTestServer {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'tfc_ie_addon'

            mods {
                tfc_ie_addon {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            args '--mod', 'tfc_ie_addon', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                tfc_ie_addon {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    mavenCentral()
    maven {
        // JEI
        name = "Progwml6 maven"
        url = "https://dvs1.progwml6.com/files/maven/"
    }
    maven {
        // Mirror for JEI
        name = "ModMaven"
        url = "https://modmaven.k-4u.nl"
    }
    maven {
        url "https://www.cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }

    maven {
        name "BlameJared"
        url "https://maven.blamejared.com"
        content {
            includeGroup "blame.jared"
        }
    }

    flatDir {
        dir "libs"
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"

    //TFC
    implementation fg.deobf("curse.maven:tfc-302973:${tfc_identifier}")

    if (System.getProperty("idea.sync.active") != "true") {
        annotationProcessor("org.spongepowered:mixin:${mixin_version}:processor")
    }

    //Patchouli
    implementation fg.deobf("vazkii.patchouli:Patchouli:${patchouli_version}")

    //Immersive Engineering
    implementation fg.deobf("blusunrize.immersiveengineering:ImmersiveEngineering:${ie_version}")
    implementation fg.deobf("blusunrize.immersiveengineering:ImmersiveEngineering:${ie_version}:api")
    implementation fg.deobf("blusunrize.immersiveengineering:ImmersiveEngineering:${ie_version}:datagen")

    //Immersive Petroleum
    implementation fg.deobf("curse.maven:immersive-petroleum-268250:${ip_version}")

    //Jade
    compileOnly fg.deobf("curse.maven:jade-324717:${jade_version}")
    runtimeOnly fg.deobf("curse.maven:jade-324717:${jade_version}")
    compileOnly fg.deobf("curse.maven:top-245211:${top_version}")

    compileOnly fg.deobf("mezz.jei:jei-1.18.2:${jei_version}:api")
    runtimeOnly fg.deobf("mezz.jei:jei-1.18.2:${jei_version}")
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "tfc_ie_addon",
                "Specification-Vendor"    : "nmagpie",
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "nmagpie",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "MixinConfigs": "tfc_ie_addon.mixins.json"
        ])
    }
}

idea {
    module {
        excludeDirs.add(file("run"))
    }
}

mixin {
    add(sourceSets.main, "tfc_ie_addon.refmap.json")
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}
